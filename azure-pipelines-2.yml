# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: windows-11


stages:
  - stage: 
    jobs:
      -  deployment: VMDeploy
         displayName: web
         environment:
          name: sudhaka-VM123
          #resourceName: sudhaka-VM123
          resourceType: VirtualMachine
         strategy:
          rolling:
             deploy:
              steps:
      
        
               - task: PublishPipelineArtifact@1
                 inputs:
                  targetPath: '$(Pipeline.Workspace)'
                  artifact: 'warfile'
                  publishLocation: pipeline
               - task: DownloadPipelineArtifact@2
                 inputs:
                  buildType: 'current'
                  artifactName: 'warfile'
                  itemPattern: '**/*.war'
                  targetPath: '$(Pipeline.Workspace)'
               - task: CopyFilesOverSSH@0
                 inputs:
                  sshEndpoint: 'JIO-VM'
                  sourceFolder: '$(System.DefaultWorkingDirectory)/**/*.war'''
                  contents: '**/*.war'
                  targetFolder: '/opt/tomcat/webapps'
                  readyTimeout: '20000'
                  
            #  -        
          #            -  task: CopyFilesOverSSH@0
        #           inputs:
        #           sshEndpoint: JAVAVM-CONNECTION
        #             sourceFolder: '$(System.DefaultWorkingDirectory)/**/*.war'
        #             contents: '**/*.war'
        #             targetFolder: /opt/tomcat/webapps
        #             readyTimeout: 20000
      

                    
                    
                      
                      
                      
                    
  
                    
                        
                                                                                
                    

                      
      
